/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package it.cnr.isti.hpc.wikipedia.article;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroArticle extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7652643957259967637L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroArticle\",\"namespace\":\"it.cnr.isti.hpc.wikipedia.article\",\"fields\":[{\"name\":\"title\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"wikiTitle\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"wid\",\"type\":\"int\"},{\"name\":\"integerNamespace\",\"type\":\"int\"},{\"name\":\"lang\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"namespace\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"timestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"enWikiTitle\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"redirect\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"paragraphs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"links\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AvroLink\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"anchor\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"start\",\"type\":\"int\",\"doc\":\"where the anchor starts in the text\"},{\"name\":\"end\",\"type\":\"int\",\"doc\":\"where the anchor ends in the text\"},{\"name\":\"paragraphId\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a paragraph, the item in the list\",\"default\":null},{\"name\":\"listId\",\"type\":[\"null\",\"int\"],\"doc\":\" if it occurs in a list, the ordinal of the list among all the lists\",\"default\":null},{\"name\":\"listItem\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a  list, the item in the list\",\"default\":null},{\"name\":\"tableId\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a table, the ordinal of the table among all the tables\",\"default\":null},{\"name\":\"rowId\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a table, the ordinal of the row\",\"default\":null},{\"name\":\"columnId\",\"type\":[\"null\",\"int\"],\"doc\":\"if it occurs in a table, the ordinal of the column\",\"default\":null},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"Type\",\"symbols\":[\"BODY\",\"TABLE\",\"LIST\",\"IMAGE\",\"UNKNOWN\",\"CATEGORY\"]}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String title;
  @Deprecated public java.lang.String wikiTitle;
  @Deprecated public int wid;
  @Deprecated public int integerNamespace;
  @Deprecated public java.lang.String lang;
  @Deprecated public java.lang.String namespace;
  @Deprecated public java.lang.String timestamp;
  @Deprecated public java.lang.String enWikiTitle;
  @Deprecated public java.lang.String redirect;
  @Deprecated public java.util.List<java.lang.String> paragraphs;
  @Deprecated public java.util.List<it.cnr.isti.hpc.wikipedia.article.AvroLink> links;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroArticle() {}

  /**
   * All-args constructor.
   * @param title The new value for title
   * @param wikiTitle The new value for wikiTitle
   * @param wid The new value for wid
   * @param integerNamespace The new value for integerNamespace
   * @param lang The new value for lang
   * @param namespace The new value for namespace
   * @param timestamp The new value for timestamp
   * @param enWikiTitle The new value for enWikiTitle
   * @param redirect The new value for redirect
   * @param paragraphs The new value for paragraphs
   * @param links The new value for links
   */
  public AvroArticle(java.lang.String title, java.lang.String wikiTitle, java.lang.Integer wid, java.lang.Integer integerNamespace, java.lang.String lang, java.lang.String namespace, java.lang.String timestamp, java.lang.String enWikiTitle, java.lang.String redirect, java.util.List<java.lang.String> paragraphs, java.util.List<it.cnr.isti.hpc.wikipedia.article.AvroLink> links) {
    this.title = title;
    this.wikiTitle = wikiTitle;
    this.wid = wid;
    this.integerNamespace = integerNamespace;
    this.lang = lang;
    this.namespace = namespace;
    this.timestamp = timestamp;
    this.enWikiTitle = enWikiTitle;
    this.redirect = redirect;
    this.paragraphs = paragraphs;
    this.links = links;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return title;
    case 1: return wikiTitle;
    case 2: return wid;
    case 3: return integerNamespace;
    case 4: return lang;
    case 5: return namespace;
    case 6: return timestamp;
    case 7: return enWikiTitle;
    case 8: return redirect;
    case 9: return paragraphs;
    case 10: return links;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: title = (java.lang.String)value$; break;
    case 1: wikiTitle = (java.lang.String)value$; break;
    case 2: wid = (java.lang.Integer)value$; break;
    case 3: integerNamespace = (java.lang.Integer)value$; break;
    case 4: lang = (java.lang.String)value$; break;
    case 5: namespace = (java.lang.String)value$; break;
    case 6: timestamp = (java.lang.String)value$; break;
    case 7: enWikiTitle = (java.lang.String)value$; break;
    case 8: redirect = (java.lang.String)value$; break;
    case 9: paragraphs = (java.util.List<java.lang.String>)value$; break;
    case 10: links = (java.util.List<it.cnr.isti.hpc.wikipedia.article.AvroLink>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'wikiTitle' field.
   * @return The value of the 'wikiTitle' field.
   */
  public java.lang.String getWikiTitle() {
    return wikiTitle;
  }

  /**
   * Sets the value of the 'wikiTitle' field.
   * @param value the value to set.
   */
  public void setWikiTitle(java.lang.String value) {
    this.wikiTitle = value;
  }

  /**
   * Gets the value of the 'wid' field.
   * @return The value of the 'wid' field.
   */
  public java.lang.Integer getWid() {
    return wid;
  }

  /**
   * Sets the value of the 'wid' field.
   * @param value the value to set.
   */
  public void setWid(java.lang.Integer value) {
    this.wid = value;
  }

  /**
   * Gets the value of the 'integerNamespace' field.
   * @return The value of the 'integerNamespace' field.
   */
  public java.lang.Integer getIntegerNamespace() {
    return integerNamespace;
  }

  /**
   * Sets the value of the 'integerNamespace' field.
   * @param value the value to set.
   */
  public void setIntegerNamespace(java.lang.Integer value) {
    this.integerNamespace = value;
  }

  /**
   * Gets the value of the 'lang' field.
   * @return The value of the 'lang' field.
   */
  public java.lang.String getLang() {
    return lang;
  }

  /**
   * Sets the value of the 'lang' field.
   * @param value the value to set.
   */
  public void setLang(java.lang.String value) {
    this.lang = value;
  }

  /**
   * Gets the value of the 'namespace' field.
   * @return The value of the 'namespace' field.
   */
  public java.lang.String getNamespace() {
    return namespace;
  }

  /**
   * Sets the value of the 'namespace' field.
   * @param value the value to set.
   */
  public void setNamespace(java.lang.String value) {
    this.namespace = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.String getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.String value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'enWikiTitle' field.
   * @return The value of the 'enWikiTitle' field.
   */
  public java.lang.String getEnWikiTitle() {
    return enWikiTitle;
  }

  /**
   * Sets the value of the 'enWikiTitle' field.
   * @param value the value to set.
   */
  public void setEnWikiTitle(java.lang.String value) {
    this.enWikiTitle = value;
  }

  /**
   * Gets the value of the 'redirect' field.
   * @return The value of the 'redirect' field.
   */
  public java.lang.String getRedirect() {
    return redirect;
  }

  /**
   * Sets the value of the 'redirect' field.
   * @param value the value to set.
   */
  public void setRedirect(java.lang.String value) {
    this.redirect = value;
  }

  /**
   * Gets the value of the 'paragraphs' field.
   * @return The value of the 'paragraphs' field.
   */
  public java.util.List<java.lang.String> getParagraphs() {
    return paragraphs;
  }

  /**
   * Sets the value of the 'paragraphs' field.
   * @param value the value to set.
   */
  public void setParagraphs(java.util.List<java.lang.String> value) {
    this.paragraphs = value;
  }

  /**
   * Gets the value of the 'links' field.
   * @return The value of the 'links' field.
   */
  public java.util.List<it.cnr.isti.hpc.wikipedia.article.AvroLink> getLinks() {
    return links;
  }

  /**
   * Sets the value of the 'links' field.
   * @param value the value to set.
   */
  public void setLinks(java.util.List<it.cnr.isti.hpc.wikipedia.article.AvroLink> value) {
    this.links = value;
  }

  /**
   * Creates a new AvroArticle RecordBuilder.
   * @return A new AvroArticle RecordBuilder
   */
  public static it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder newBuilder() {
    return new it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder();
  }

  /**
   * Creates a new AvroArticle RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroArticle RecordBuilder
   */
  public static it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder newBuilder(it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder other) {
    return new it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder(other);
  }

  /**
   * Creates a new AvroArticle RecordBuilder by copying an existing AvroArticle instance.
   * @param other The existing instance to copy.
   * @return A new AvroArticle RecordBuilder
   */
  public static it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder newBuilder(it.cnr.isti.hpc.wikipedia.article.AvroArticle other) {
    return new it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder(other);
  }

  /**
   * RecordBuilder for AvroArticle instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroArticle>
    implements org.apache.avro.data.RecordBuilder<AvroArticle> {

    private java.lang.String title;
    private java.lang.String wikiTitle;
    private int wid;
    private int integerNamespace;
    private java.lang.String lang;
    private java.lang.String namespace;
    private java.lang.String timestamp;
    private java.lang.String enWikiTitle;
    private java.lang.String redirect;
    private java.util.List<java.lang.String> paragraphs;
    private java.util.List<it.cnr.isti.hpc.wikipedia.article.AvroLink> links;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.wikiTitle)) {
        this.wikiTitle = data().deepCopy(fields()[1].schema(), other.wikiTitle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.wid)) {
        this.wid = data().deepCopy(fields()[2].schema(), other.wid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.integerNamespace)) {
        this.integerNamespace = data().deepCopy(fields()[3].schema(), other.integerNamespace);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lang)) {
        this.lang = data().deepCopy(fields()[4].schema(), other.lang);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.namespace)) {
        this.namespace = data().deepCopy(fields()[5].schema(), other.namespace);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.enWikiTitle)) {
        this.enWikiTitle = data().deepCopy(fields()[7].schema(), other.enWikiTitle);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.redirect)) {
        this.redirect = data().deepCopy(fields()[8].schema(), other.redirect);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.paragraphs)) {
        this.paragraphs = data().deepCopy(fields()[9].schema(), other.paragraphs);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.links)) {
        this.links = data().deepCopy(fields()[10].schema(), other.links);
        fieldSetFlags()[10] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroArticle instance
     * @param other The existing instance to copy.
     */
    private Builder(it.cnr.isti.hpc.wikipedia.article.AvroArticle other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.wikiTitle)) {
        this.wikiTitle = data().deepCopy(fields()[1].schema(), other.wikiTitle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.wid)) {
        this.wid = data().deepCopy(fields()[2].schema(), other.wid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.integerNamespace)) {
        this.integerNamespace = data().deepCopy(fields()[3].schema(), other.integerNamespace);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lang)) {
        this.lang = data().deepCopy(fields()[4].schema(), other.lang);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.namespace)) {
        this.namespace = data().deepCopy(fields()[5].schema(), other.namespace);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.enWikiTitle)) {
        this.enWikiTitle = data().deepCopy(fields()[7].schema(), other.enWikiTitle);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.redirect)) {
        this.redirect = data().deepCopy(fields()[8].schema(), other.redirect);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.paragraphs)) {
        this.paragraphs = data().deepCopy(fields()[9].schema(), other.paragraphs);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.links)) {
        this.links = data().deepCopy(fields()[10].schema(), other.links);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.String getTitle() {
      return title;
    }

    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setTitle(java.lang.String value) {
      validate(fields()[0], value);
      this.title = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearTitle() {
      title = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'wikiTitle' field.
      * @return The value.
      */
    public java.lang.String getWikiTitle() {
      return wikiTitle;
    }

    /**
      * Sets the value of the 'wikiTitle' field.
      * @param value The value of 'wikiTitle'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setWikiTitle(java.lang.String value) {
      validate(fields()[1], value);
      this.wikiTitle = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'wikiTitle' field has been set.
      * @return True if the 'wikiTitle' field has been set, false otherwise.
      */
    public boolean hasWikiTitle() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'wikiTitle' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearWikiTitle() {
      wikiTitle = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'wid' field.
      * @return The value.
      */
    public java.lang.Integer getWid() {
      return wid;
    }

    /**
      * Sets the value of the 'wid' field.
      * @param value The value of 'wid'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setWid(int value) {
      validate(fields()[2], value);
      this.wid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'wid' field has been set.
      * @return True if the 'wid' field has been set, false otherwise.
      */
    public boolean hasWid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'wid' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearWid() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'integerNamespace' field.
      * @return The value.
      */
    public java.lang.Integer getIntegerNamespace() {
      return integerNamespace;
    }

    /**
      * Sets the value of the 'integerNamespace' field.
      * @param value The value of 'integerNamespace'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setIntegerNamespace(int value) {
      validate(fields()[3], value);
      this.integerNamespace = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'integerNamespace' field has been set.
      * @return True if the 'integerNamespace' field has been set, false otherwise.
      */
    public boolean hasIntegerNamespace() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'integerNamespace' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearIntegerNamespace() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'lang' field.
      * @return The value.
      */
    public java.lang.String getLang() {
      return lang;
    }

    /**
      * Sets the value of the 'lang' field.
      * @param value The value of 'lang'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setLang(java.lang.String value) {
      validate(fields()[4], value);
      this.lang = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'lang' field has been set.
      * @return True if the 'lang' field has been set, false otherwise.
      */
    public boolean hasLang() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'lang' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearLang() {
      lang = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'namespace' field.
      * @return The value.
      */
    public java.lang.String getNamespace() {
      return namespace;
    }

    /**
      * Sets the value of the 'namespace' field.
      * @param value The value of 'namespace'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setNamespace(java.lang.String value) {
      validate(fields()[5], value);
      this.namespace = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'namespace' field has been set.
      * @return True if the 'namespace' field has been set, false otherwise.
      */
    public boolean hasNamespace() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'namespace' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearNamespace() {
      namespace = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.String getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setTimestamp(java.lang.String value) {
      validate(fields()[6], value);
      this.timestamp = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'enWikiTitle' field.
      * @return The value.
      */
    public java.lang.String getEnWikiTitle() {
      return enWikiTitle;
    }

    /**
      * Sets the value of the 'enWikiTitle' field.
      * @param value The value of 'enWikiTitle'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setEnWikiTitle(java.lang.String value) {
      validate(fields()[7], value);
      this.enWikiTitle = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'enWikiTitle' field has been set.
      * @return True if the 'enWikiTitle' field has been set, false otherwise.
      */
    public boolean hasEnWikiTitle() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'enWikiTitle' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearEnWikiTitle() {
      enWikiTitle = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'redirect' field.
      * @return The value.
      */
    public java.lang.String getRedirect() {
      return redirect;
    }

    /**
      * Sets the value of the 'redirect' field.
      * @param value The value of 'redirect'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setRedirect(java.lang.String value) {
      validate(fields()[8], value);
      this.redirect = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'redirect' field has been set.
      * @return True if the 'redirect' field has been set, false otherwise.
      */
    public boolean hasRedirect() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'redirect' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearRedirect() {
      redirect = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'paragraphs' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getParagraphs() {
      return paragraphs;
    }

    /**
      * Sets the value of the 'paragraphs' field.
      * @param value The value of 'paragraphs'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setParagraphs(java.util.List<java.lang.String> value) {
      validate(fields()[9], value);
      this.paragraphs = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'paragraphs' field has been set.
      * @return True if the 'paragraphs' field has been set, false otherwise.
      */
    public boolean hasParagraphs() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'paragraphs' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearParagraphs() {
      paragraphs = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'links' field.
      * @return The value.
      */
    public java.util.List<it.cnr.isti.hpc.wikipedia.article.AvroLink> getLinks() {
      return links;
    }

    /**
      * Sets the value of the 'links' field.
      * @param value The value of 'links'.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder setLinks(java.util.List<it.cnr.isti.hpc.wikipedia.article.AvroLink> value) {
      validate(fields()[10], value);
      this.links = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'links' field has been set.
      * @return True if the 'links' field has been set, false otherwise.
      */
    public boolean hasLinks() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'links' field.
      * @return This builder.
      */
    public it.cnr.isti.hpc.wikipedia.article.AvroArticle.Builder clearLinks() {
      links = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public AvroArticle build() {
      try {
        AvroArticle record = new AvroArticle();
        record.title = fieldSetFlags()[0] ? this.title : (java.lang.String) defaultValue(fields()[0]);
        record.wikiTitle = fieldSetFlags()[1] ? this.wikiTitle : (java.lang.String) defaultValue(fields()[1]);
        record.wid = fieldSetFlags()[2] ? this.wid : (java.lang.Integer) defaultValue(fields()[2]);
        record.integerNamespace = fieldSetFlags()[3] ? this.integerNamespace : (java.lang.Integer) defaultValue(fields()[3]);
        record.lang = fieldSetFlags()[4] ? this.lang : (java.lang.String) defaultValue(fields()[4]);
        record.namespace = fieldSetFlags()[5] ? this.namespace : (java.lang.String) defaultValue(fields()[5]);
        record.timestamp = fieldSetFlags()[6] ? this.timestamp : (java.lang.String) defaultValue(fields()[6]);
        record.enWikiTitle = fieldSetFlags()[7] ? this.enWikiTitle : (java.lang.String) defaultValue(fields()[7]);
        record.redirect = fieldSetFlags()[8] ? this.redirect : (java.lang.String) defaultValue(fields()[8]);
        record.paragraphs = fieldSetFlags()[9] ? this.paragraphs : (java.util.List<java.lang.String>) defaultValue(fields()[9]);
        record.links = fieldSetFlags()[10] ? this.links : (java.util.List<it.cnr.isti.hpc.wikipedia.article.AvroLink>) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
